// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bloomfieldpb.proto

package bloomfieldpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_SUCCESS Status = 0
	Status_FAILURE Status = 1
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}
var Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bloomfieldpb_af8d000b4cdb54ea, []int{0}
}

type Hashes struct {
	Hash1                uint64   `protobuf:"varint,1,opt,name=Hash1" json:"Hash1,omitempty"`
	Hash2                uint64   `protobuf:"varint,2,opt,name=Hash2" json:"Hash2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hashes) Reset()         { *m = Hashes{} }
func (m *Hashes) String() string { return proto.CompactTextString(m) }
func (*Hashes) ProtoMessage()    {}
func (*Hashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_bloomfieldpb_af8d000b4cdb54ea, []int{0}
}
func (m *Hashes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hashes.Unmarshal(m, b)
}
func (m *Hashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hashes.Marshal(b, m, deterministic)
}
func (dst *Hashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hashes.Merge(dst, src)
}
func (m *Hashes) XXX_Size() int {
	return xxx_messageInfo_Hashes.Size(m)
}
func (m *Hashes) XXX_DiscardUnknown() {
	xxx_messageInfo_Hashes.DiscardUnknown(m)
}

var xxx_messageInfo_Hashes proto.InternalMessageInfo

func (m *Hashes) GetHash1() uint64 {
	if m != nil {
		return m.Hash1
	}
	return 0
}

func (m *Hashes) GetHash2() uint64 {
	if m != nil {
		return m.Hash2
	}
	return 0
}

type FilterRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterRequest) Reset()         { *m = FilterRequest{} }
func (m *FilterRequest) String() string { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()    {}
func (*FilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bloomfieldpb_af8d000b4cdb54ea, []int{1}
}
func (m *FilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterRequest.Unmarshal(m, b)
}
func (m *FilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterRequest.Marshal(b, m, deterministic)
}
func (dst *FilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterRequest.Merge(dst, src)
}
func (m *FilterRequest) XXX_Size() int {
	return xxx_messageInfo_FilterRequest.Size(m)
}
func (m *FilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilterRequest proto.InternalMessageInfo

func (m *FilterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type KeyRequest struct {
	FilterName           string    `protobuf:"bytes,1,opt,name=FilterName" json:"FilterName,omitempty"`
	Hashes               []*Hashes `protobuf:"bytes,2,rep,name=Hashes" json:"Hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *KeyRequest) Reset()         { *m = KeyRequest{} }
func (m *KeyRequest) String() string { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()    {}
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bloomfieldpb_af8d000b4cdb54ea, []int{2}
}
func (m *KeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyRequest.Unmarshal(m, b)
}
func (m *KeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyRequest.Marshal(b, m, deterministic)
}
func (dst *KeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyRequest.Merge(dst, src)
}
func (m *KeyRequest) XXX_Size() int {
	return xxx_messageInfo_KeyRequest.Size(m)
}
func (m *KeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyRequest proto.InternalMessageInfo

func (m *KeyRequest) GetFilterName() string {
	if m != nil {
		return m.FilterName
	}
	return ""
}

func (m *KeyRequest) GetHashes() []*Hashes {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type Response struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,enum=bloomfieldpb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_bloomfieldpb_af8d000b4cdb54ea, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

type HasResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,enum=bloomfieldpb.Status" json:"Status,omitempty"`
	Has                  []bool   `protobuf:"varint,2,rep,packed,name=Has" json:"Has,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasResponse) Reset()         { *m = HasResponse{} }
func (m *HasResponse) String() string { return proto.CompactTextString(m) }
func (*HasResponse) ProtoMessage()    {}
func (*HasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bloomfieldpb_af8d000b4cdb54ea, []int{4}
}
func (m *HasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasResponse.Unmarshal(m, b)
}
func (m *HasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasResponse.Marshal(b, m, deterministic)
}
func (dst *HasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasResponse.Merge(dst, src)
}
func (m *HasResponse) XXX_Size() int {
	return xxx_messageInfo_HasResponse.Size(m)
}
func (m *HasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasResponse proto.InternalMessageInfo

func (m *HasResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *HasResponse) GetHas() []bool {
	if m != nil {
		return m.Has
	}
	return nil
}

func init() {
	proto.RegisterType((*Hashes)(nil), "bloomfieldpb.Hashes")
	proto.RegisterType((*FilterRequest)(nil), "bloomfieldpb.FilterRequest")
	proto.RegisterType((*KeyRequest)(nil), "bloomfieldpb.KeyRequest")
	proto.RegisterType((*Response)(nil), "bloomfieldpb.Response")
	proto.RegisterType((*HasResponse)(nil), "bloomfieldpb.HasResponse")
	proto.RegisterEnum("bloomfieldpb.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bloom service

type BloomClient interface {
	CreateFilter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*Response, error)
	DropFilter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*Response, error)
	Add(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*HasResponse, error)
	Has(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*HasResponse, error)
}

type bloomClient struct {
	cc *grpc.ClientConn
}

func NewBloomClient(cc *grpc.ClientConn) BloomClient {
	return &bloomClient{cc}
}

func (c *bloomClient) CreateFilter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/bloomfieldpb.Bloom/CreateFilter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bloomClient) DropFilter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/bloomfieldpb.Bloom/DropFilter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bloomClient) Add(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*HasResponse, error) {
	out := new(HasResponse)
	err := grpc.Invoke(ctx, "/bloomfieldpb.Bloom/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bloomClient) Has(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*HasResponse, error) {
	out := new(HasResponse)
	err := grpc.Invoke(ctx, "/bloomfieldpb.Bloom/Has", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bloom service

type BloomServer interface {
	CreateFilter(context.Context, *FilterRequest) (*Response, error)
	DropFilter(context.Context, *FilterRequest) (*Response, error)
	Add(context.Context, *KeyRequest) (*HasResponse, error)
	Has(context.Context, *KeyRequest) (*HasResponse, error)
}

func RegisterBloomServer(s *grpc.Server, srv BloomServer) {
	s.RegisterService(&_Bloom_serviceDesc, srv)
}

func _Bloom_CreateFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BloomServer).CreateFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bloomfieldpb.Bloom/CreateFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BloomServer).CreateFilter(ctx, req.(*FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bloom_DropFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BloomServer).DropFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bloomfieldpb.Bloom/DropFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BloomServer).DropFilter(ctx, req.(*FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bloom_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BloomServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bloomfieldpb.Bloom/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BloomServer).Add(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bloom_Has_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BloomServer).Has(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bloomfieldpb.Bloom/Has",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BloomServer).Has(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bloom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bloomfieldpb.Bloom",
	HandlerType: (*BloomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFilter",
			Handler:    _Bloom_CreateFilter_Handler,
		},
		{
			MethodName: "DropFilter",
			Handler:    _Bloom_DropFilter_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _Bloom_Add_Handler,
		},
		{
			MethodName: "Has",
			Handler:    _Bloom_Has_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bloomfieldpb.proto",
}

func init() { proto.RegisterFile("bloomfieldpb.proto", fileDescriptor_bloomfieldpb_af8d000b4cdb54ea) }

var fileDescriptor_bloomfieldpb_af8d000b4cdb54ea = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x4f, 0x4f, 0x83, 0x40,
	0x10, 0xc5, 0x5b, 0x68, 0x6b, 0x1d, 0xaa, 0x21, 0x93, 0xc6, 0x60, 0x4d, 0x4c, 0xb3, 0x5e, 0x1a,
	0x63, 0x9a, 0x88, 0x1e, 0x3c, 0x78, 0xa9, 0x48, 0x83, 0xf1, 0xcf, 0x61, 0x49, 0x2f, 0xde, 0x96,
	0xb0, 0xc6, 0x26, 0xd4, 0x45, 0x76, 0x7b, 0xf0, 0x53, 0xf8, 0x95, 0x0d, 0x6c, 0x49, 0x59, 0xbd,
	0xd5, 0xdb, 0xcc, 0x9b, 0xf7, 0x1b, 0x1e, 0x0c, 0x80, 0x49, 0x26, 0xc4, 0xea, 0x6d, 0xc9, 0xb3,
	0x34, 0x4f, 0xa6, 0x79, 0x21, 0x94, 0xc0, 0x41, 0x53, 0x23, 0xd7, 0xd0, 0x8b, 0x98, 0x7c, 0xe7,
	0x12, 0x87, 0xd0, 0x2d, 0xab, 0x4b, 0xaf, 0x3d, 0x6e, 0x4f, 0x3a, 0x54, 0x37, 0xb5, 0xea, 0x7b,
	0xd6, 0x56, 0xf5, 0xc9, 0x19, 0x1c, 0xcc, 0x97, 0x99, 0xe2, 0x05, 0xe5, 0x9f, 0x6b, 0x2e, 0x15,
	0x22, 0x74, 0x5e, 0xd8, 0x8a, 0x57, 0xec, 0x3e, 0xad, 0x6a, 0xf2, 0x0a, 0xf0, 0xc8, 0xbf, 0x6a,
	0xc7, 0x29, 0x80, 0x46, 0x1a, 0xbe, 0x86, 0x82, 0x17, 0x75, 0x10, 0xcf, 0x1a, 0xdb, 0x13, 0xc7,
	0x1f, 0x4e, 0x8d, 0xec, 0x7a, 0x46, 0x37, 0x1e, 0x72, 0x03, 0x7d, 0xca, 0x65, 0x2e, 0x3e, 0x64,
	0x45, 0xc6, 0x8a, 0xa9, 0xb5, 0xac, 0xb6, 0x1e, 0xfe, 0x26, 0xf5, 0x8c, 0x6e, 0x3c, 0xe4, 0x19,
	0x9c, 0x88, 0xc9, 0xdd, 0x60, 0x74, 0xc1, 0x8e, 0x98, 0x4e, 0xd8, 0xa7, 0x65, 0x79, 0x4e, 0x6a,
	0x1e, 0x1d, 0xd8, 0x8b, 0x17, 0x41, 0x10, 0xc6, 0xb1, 0xdb, 0x2a, 0x9b, 0xf9, 0xec, 0xe1, 0x69,
	0x41, 0x43, 0xb7, 0xed, 0x7f, 0x5b, 0xd0, 0xbd, 0x2b, 0xb7, 0x62, 0x08, 0x83, 0xa0, 0xe0, 0x4c,
	0x71, 0xfd, 0xe2, 0x78, 0x62, 0x3e, 0xcd, 0xf8, 0xa6, 0xa3, 0x23, 0x73, 0x58, 0x47, 0x26, 0x2d,
	0x0c, 0x00, 0xee, 0x0b, 0x91, 0xff, 0x6f, 0xc9, 0x2d, 0xd8, 0xb3, 0x34, 0x45, 0xcf, 0x34, 0x6c,
	0x2f, 0x36, 0x3a, 0xfe, 0x73, 0x01, 0x93, 0x8e, 0x98, 0xdc, 0x91, 0x4e, 0x7a, 0xd5, 0xaf, 0x78,
	0xf5, 0x13, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xf6, 0xb9, 0xb4, 0xa0, 0x02, 0x00, 0x00,
}
